version: 1.0.{build}
branches:
  only:
    - master
skip_tags: true
build:
  verbosity: minimal
image: Visual Studio 2022
environment:
  global:
    paperkey:
      secure: MxOJZPR1tTkos0f/z1rM4fjHtWmg4kR3B6uAz8u59R5uDteHyeOSFYwATBPonHVC8oSKAWyrtma2Krk1fIXPMJs+FizIDsxh8VhsgMaeNnU=
    password:
      secure: RjmtameUusXhisMaJSPfbg==
    priv_key:
      secure: JzXFHdVn0Dizbao+lLC2aat+PkimGDkX5Hml063KZSfu05rt4igm1iYkTHPPm4OZI4WmVQSh6GRTS8BN30nduw==
build_script:
  - cmd: >-
    
      REM curl -fsS -o 7z1900.msi "https://www.7-zip.org/a/7z1900.msi"
      
      curl -fsS -o id_rsa.gpg "https://raw.githubusercontent.com/kenkit/neon_server/master/id_rsa.gpg"
      
      REM start /wait msiexec.exe /i 7z1900.msi  /qb
      
      REM ENCYRYPTED WITH:gpg -c --batch --passphrase "" id_rsa
      
      echo "Output to %userprofile%\.ssh\id_rsa"
    
      echo  > fl
    
      "C:\Program Files\Git\usr\bin\gpg.exe" --pinentry-mode loopback --passphrase "%priv_key%"  -d id_rsa.gpg > %userprofile%\.ssh\id_rsa

      cd ../

      rd /s /q neon

      git clone  git@github.com:kenkit/neon_p.git  neon

      cd neon
      
      git checkout 161eb344e358244d46549d0e628602f73e3ba80e

      git submodule update --init --recursive

      REM echo "FFMPEG DIR:%FFMPEG%" 

      REM call 7z x  -y -r ffmpeg_dependancies.zip

      REM call 7z x  -y -r "cef_binary_3.3578.1860.g36610bd_windows32.tar.bz2" && REM call 7z x  -y -r  "cef_binary_3.3578.1860.g36610bd_windows32.tar"

      REM set CEF_ROOT=%cd%\cef_binary_3.3578.1860.g36610bd_windows32

      REM copy /b/v/y imgui-files\cef_macros.cmake %CEF_ROOT%\cmake

      REM copy /b/v/y imgui-files\cef_variables.cmake %CEF_ROOT%\cmake

      mkdir build

      cd build

      REM mkdir OGRE

      REM set OGRE_DIR=%cd%\OGRE\build\sdk\CMake

      REM set OGRE_HOME=%cd%\OGRE

      REM set SDL2_DIR=%OGRE_HOME%\build\sdk\ogredeps\cmake

      REM echo "Ogre:%OGRE_DIR%"

      set BOOST_ROOT=C:\Libraries\boost_1_73_0

      cmake -A Win32 ../ -DOPENSSL_ROOT_DIR=C:/OpenSSL-Win32/ -DCMAKE_BUILD_TYPE=Release -DWINDOWS_KIT_VER=10.0.22000.0 -DVC_CRED_VER=14.34.31931 -DVC_EDITION=Community

      cmake --build ../build --config Release

      cpack . -C Release --verbose
artifacts:
  - path: 'build/NeonInstaller*-win32.msi'
    name: NeonInstaller-win32.msi
before_deploy:
  - ps: >-
      echo "NEON CHANGELOG"  | Add-Content  -Encoding UTF8 -Path tmp

      echo "************************"  | Add-Content  -Encoding UTF8 -Path tmp

      git log -10   --pretty="%aD--%B" |Add-Content  -Encoding UTF8 -Path tmp

      $currntly=(Resolve-Path .\).Path

      cd $currntly

      $rnp = Resolve-Path("tmp")

      $rnc = [IO.File]::ReadAllText($rnp)

      Set-AppveyorBuildVariable -Name release_description -Value $rnc

deploy:
  - provider: GitHub
    description: $(release_description)
    auth_token:
      secure: i2a9aEMUg9IUK+O7GIfYQWSERUI9/FRSLoKMcPRJdgW3RlJvTBN0hpgKpBJJsN4B
    repository: kenkit/neon
    artifact: NeonInstaller-win32.msi
